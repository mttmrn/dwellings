{"ast":null,"code":"var _jsxFileName = \"/Users/mattmoran/Desktop/VS Code/dwellings/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport GithubCorner from \"react-github-corner\";\nimport MailchimpSubscribe from \"../../src\"; // a basic form\n\nconst CustomForm = ({\n  status,\n  message,\n  onValidated\n}) => {\n  let email, name;\n\n  const submit = () => email && name && email.value.indexOf(\"@\") > -1 && onValidated({\n    EMAIL: email.value,\n    NAME: name.value\n  });\n\n  return React.createElement(\"div\", {\n    style: {\n      background: \"#efefef\",\n      borderRadius: 2,\n      padding: 10,\n      display: \"inline-block\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \" \", status === \"sending\" && React.createElement(\"div\", {\n    style: {\n      color: \"blue\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" sending... \"), \" \", status === \"error\" && React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), \" \", status === \"success\" && React.createElement(\"div\", {\n    style: {\n      color: \"green\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), \" \", React.createElement(\"input\", {\n    style: {\n      fontSize: \"2em\",\n      padding: 5\n    },\n    ref: node => name = node,\n    type: \"text\",\n    placeholder: \"Your name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    style: {\n      fontSize: \"2em\",\n      padding: 5\n    },\n    ref: node => email = node,\n    type: \"email\",\n    placeholder: \"Your email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    style: {\n      fontSize: \"2em\",\n      padding: 5\n    },\n    onClick: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Submit \"), \" \");\n};\n\nclass Demo extends Component {\n  render() {\n    const url = \"https://jster.us7.list-manage.com/subscribe/post?u=ed40c0084a0c5ba31b3365d65&id=ec6f32bf5e\";\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \" react - mailchimp - subscribe Demo \"), \" \", React.createElement(GithubCorner, {\n      href: \"https://github.com/revolunet/react-mailchimp-subscribe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \" Default Form \"), \" \", React.createElement(MailchimpSubscribe, {\n      url: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), \" \", React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \" Custom Form \"), \" \", React.createElement(MailchimpSubscribe, {\n      url: url,\n      render: ({\n        subscribe,\n        status,\n        message\n      }) => React.createElement(CustomForm, {\n        status: status,\n        message: message,\n        onValidated: formData => subscribe(formData),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), \" \");\n  }\n\n}\n\nReactDOM.render(React.createElement(Demo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/mattmoran/Desktop/VS Code/dwellings/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","GithubCorner","MailchimpSubscribe","CustomForm","status","message","onValidated","email","name","submit","value","indexOf","EMAIL","NAME","background","borderRadius","padding","display","color","__html","fontSize","node","Demo","Component","render","url","subscribe","formData","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport GithubCorner from \"react-github-corner\";\n\nimport MailchimpSubscribe from \"../../src\";\n\n// a basic form\nconst CustomForm = ({\n    status,\n    message,\n    onValidated\n}) => {\n    let email, name;\n    const submit = () =>\n        email &&\n        name &&\n        email.value.indexOf(\"@\") > -1 &&\n        onValidated({\n            EMAIL: email.value,\n            NAME: name.value\n        });\n\n    return ( <\n        div style = {\n            {\n                background: \"#efefef\",\n                borderRadius: 2,\n                padding: 10,\n                display: \"inline-block\"\n            }\n        } > {\n            status === \"sending\" && < div style = {\n                {\n                    color: \"blue\"\n                }\n            } > sending... < /div>} {\n            status === \"error\" && ( <\n                div style = {\n                    {\n                        color: \"red\"\n                    }\n                }\n                dangerouslySetInnerHTML = {\n                    {\n                        __html: message\n                    }\n                }\n                />\n            )\n        } {\n            status === \"success\" && ( <\n                div style = {\n                    {\n                        color: \"green\"\n                    }\n                }\n                dangerouslySetInnerHTML = {\n                    {\n                        __html: message\n                    }\n                }\n                />\n            )\n        } <\n        input style = {\n            {\n                fontSize: \"2em\",\n                padding: 5\n            }\n        }\n        ref = {\n            node => (name = node)\n        }\n        type = \"text\"\n        placeholder = \"Your name\" /\n        >\n        <\n        br / >\n        <\n        input style = {\n            {\n                fontSize: \"2em\",\n                padding: 5\n            }\n        }\n        ref = {\n            node => (email = node)\n        }\n        type = \"email\"\n        placeholder = \"Your email\" /\n        >\n        <\n        br / >\n        <\n        button style = {\n            {\n                fontSize: \"2em\",\n                padding: 5\n            }\n        }\n        onClick = {\n            submit\n        } >\n        Submit <\n        /button> < /\n        div >\n    );\n};\n\nclass Demo extends Component {\n    render() {\n        const url =\n            \"https://jster.us7.list-manage.com/subscribe/post?u=ed40c0084a0c5ba31b3365d65&id=ec6f32bf5e\";\n        return ( <\n            div >\n            <\n            h1 > react - mailchimp - subscribe Demo < /h1> <\n            GithubCorner href = \"https://github.com/revolunet/react-mailchimp-subscribe\" / >\n            <\n            h2 > Default Form < /h2> <\n            MailchimpSubscribe url = {\n                url\n            }\n            /> <\n            h2 > Custom Form < /h2> <\n            MailchimpSubscribe url = {\n                url\n            }\n            render = {\n                ({\n                    subscribe,\n                    status,\n                    message\n                }) => ( <\n                    CustomForm status = {\n                        status\n                    }\n                    message = {\n                        message\n                    }\n                    onValidated = {\n                        formData => subscribe(formData)\n                    }\n                    />\n                )\n            }\n            /> < /\n            div >\n        );\n    }\n}\n\n\nReactDOM.render( < Demo / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}