{"version":3,"sources":["img/home.svg","img/bezier.svg","img/cloud.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","src","Bezier","alt","Cloud","type","placeholder","Home","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,qGCA3CD,EAAOC,QAAU,IAA0B,mC,yJCgD5BC,MAzCf,WAEE,OACE,yBAAKC,UAAU,gBACb,yBAAKC,IAAKC,IAAQF,UAAU,kBAAkBG,IAAI,WAClD,4BAAQH,UAAU,sCAChB,yBAAKC,IAAKG,IAAOJ,UAAU,6BAA6BG,IAAI,UAC5D,yBAAKF,IAAKG,IAAOJ,UAAU,2BAA2BG,IAAI,UAC1D,yBAAKF,IAAKG,IAAOJ,UAAU,6BAA6BG,IAAI,UAC5D,yBAAKF,IAAKG,IAAOJ,UAAU,8BAA8BG,IAAI,UAC7D,yBAAKF,IAAKG,IAAOJ,UAAU,4BAA4BG,IAAI,UAC3D,yBAAKF,IAAKG,IAAOJ,UAAU,8BAA8BG,IAAI,UAC7D,yBAAKH,UAAU,gBACb,0BAAMA,UAAU,QAAhB,eAGJ,0BAAMA,UAAU,iBACd,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,YAAd,6BACA,wBAAIA,UAAU,WAAd,4EACA,yBAAKA,UAAU,2CACb,2BAAOK,KAAK,QAAQC,YAAY,gBAAgBN,UAAU,wBAC1D,4BAAQA,UAAU,wBAChB,yBAAKA,UAAU,wCAAf,uBAEJ,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,iBAAgB,uBAAGA,UAAU,oBAAb,uDAC/B,yBAAKA,UAAU,iBAAgB,uBAAGA,UAAU,oBAAb,gDAC/B,yBAAKA,UAAU,iBAAgB,uBAAGA,UAAU,oBAAb,gDAGnC,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,WAAWC,IAAKM,IAAMJ,IAAI,gCC3B/BK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1dd2fb70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.0eb8de79.svg\";","module.exports = __webpack_public_path__ + \"static/media/bezier.fd9fbc94.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud.22a5616c.svg\";","import React from 'react';\nimport './App.css';\nimport Cloud from './img/cloud.svg'\nimport Home from './img/home.svg'\nimport Bezier from './img/bezier.svg'\nimport { loadOptions } from '@babel/core';\n\nfunction App() {\n\n  return (\n    <div className=\"app relative\">\n      <img src={Bezier} className=\"bezier absolute\" alt=\"bezier\" />\n      <header className=\"header-container centered relative\">\n        <img src={Cloud} className=\"absolute cloud-large left1\" alt=\"cloud\" />\n        <img src={Cloud} className=\"absolute cloud-med left2\" alt=\"cloud\" />\n        <img src={Cloud} className=\"absolute cloud-small left3\" alt=\"cloud\" />\n        <img src={Cloud} className=\"absolute cloud-small right3\" alt=\"cloud\" />\n        <img src={Cloud} className=\"absolute cloud-med right2\" alt=\"cloud\" />\n        <img src={Cloud} className=\"absolute cloud-large right1\" alt=\"cloud\" />\n        <div className=\"sun centered\">\n          <span className=\"logo\">dwellings</span>\n        </div>\n      </header>\n      <main className=\"flex relative\">\n        <div className=\"container-left\">\n          <h1 className=\"headline\">Housing for Entrepreneurs</h1>\n          <h2 className=\"subhead\">Become roommates with brilliant people in luxury homes across the globe.</h2>\n          <div className=\"signup-container centered space-between\">\n            <input type=\"email\" placeholder=\"Email Address\" className=\"email-input regular\" />\n            <button className=\"btn regular relative\">\n              <div className=\"btn-inside absolute centered regular\">Request an Invite</div></button>\n          </div>\n          <div className=\"flex space-between\">\n            <div className=\"card centered\"><p className=\"description-text\">Know your roommates before making any commitments.</p></div>\n            <div className=\"card centered\"><p className=\"description-text\">Average rent is less than $900 per person. </p></div>\n            <div className=\"card centered\"><p className=\"description-text\">Long term and short term stays available.</p></div>\n          </div>\n        </div>\n        <div className=\"centered container-right\">\n          <img className=\"home-img\" src={Home} alt=\"home with people inside\" />\n        </div>\n      </main>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}